#!/bin/bash
# This is sourced. Fake bang-path to help editors and linters
# shellcheck disable=SC2034  # dont warn about unused variables

#
#  Use this to override location of plugins.
#  Usefull if some project config needs to use alternate options
#  for plugins, or trying out a new plugin definition.
#  In the normal case leave it empty, and the default will be used.
#
# plugin_dir="$olint_cfg_dir"/plugins

#
#  If you use '+='' you will add new items to the existing list
#  using '=' you will replace the previous list, could be handy in a project
#  config if the global conf lists a lot of stuff normally not of interest
#  but it should be checked in a specific project
#

#
#  Use skip_plugins in a per-project config (.olint.conf) to skip one
#  or more linters. Use this as a template, and uncomment linters that
#  should not to be used
#

#
#  Use skip_plugins in a per-project config (.olint.conf) to skip one
#  or more linters. Use this as a template, and uncomment linters that
#  should not to be used
#
skip_plugins+=(
    # bandit
    # checkbashisms
    # flake8
    # jsonlint
    # markdownlint
    # mypy
    # pid_valid  # veifies that any pidfile found points to a running proc
    # pycodestyle # flake8 does this, if flake8 is used this is redundant
    # pylint
    # pylintrc
    # rslint
    # shellcheck
    # vale # in not_used by default
    # yamllint
)

#
#  Handling what files should be skipped by olint
#

# Explicit excludes, give entire filepath as listed by olint
excludes+=(
    py_code/linting.py
    py_code/lintography.py
)

# Filter by prefix, as listed by olint
prefixes+=(
)

# Filter by suffix
suffixes+=(
)

#
# Sample linter overrides, would if some projects need alternate linter cmds
#
# override_linter_cmd["shellcheck"]="shellcheck -a -x --color=always -o all"

#
#  Disable linter in this project
#
# override_linter_cmd["shellcheck"]=""

#
#  Some options that can be pre-defined
#
# lint_continue=true
use_cache=false
# debug_level=9
