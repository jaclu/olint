#!/bin/sh
#
#  Part of https://github.com/jaclu/olint
#
#  Copyright (c) 2024: Jacob.Lundqvist@gmail.com
#
#  License: MIT
#
#  This deploy olint and the default config file (if not already present)
#  Can be run again to deploy updates.
#

check_dependencies() {
    #
    #  Check if tools needed are available
    #
    deps=""
    command -v rsync >/dev/null || deps="$deps rsync"

    if [ -f /etc/debian_version ]; then
        install_procedure="apt install"
    elif [ -f /etc/alpine-release ]; then
        install_procedure="apk add"
    fi

    [ -n "$deps" ] && {
        if [ -z "$install_procedure" ]; then
            echo
            echo "WARNING: tools missing: $deps"
            echo "Not able to suggest how to deploy"
        else
            echo "WARNING: Missing dependencies, solve by running"
            echo "$install_procedure $deps"
        fi
        exit 1
    }
    unset deps install_procedure
}

get_app_destination() {
    #
    #  Exposed variables:
    #    d_app_dest - where the olint app should be installed
    #
    f_dest_hint="$(echo "$REPO_DIR/.destination" | sed 's#^\./##')"
    if [ ! -f "$f_dest_hint" ]; then
        echo "In order for deploy to know the intended destination for the binary"
        echo "Create a file with destination folder and name it: $f_dest_hint"
        echo "This deploy will use rsync and install/update olint to that location."
        echo "Example:"
        echo "  echo $HOME/.local/bin > $f_dest_hint"
        exit 1
    fi
    d_app_dest="$(cat "$f_dest_hint")"
    unset f_dest_hint

    if [ ! -d "$d_app_dest" ]; then
        echo
        echo "ERROR: The directory mentioned in .destination does not exist"
        echo "       Supplied destination: $d_app_dest"
        exit 1
    fi
}

#
#  Actions
#

deploy_default_config() {
    d_default_conf="$("$REPO_DIR"/olint --config-dir)" || {
        echo "ERROR: Failed to extract config-dir"
        exit 1
    }
    mkdir -p "$d_default_conf"
    f_default_conf="$d_default_conf/olint.conf"

    if [ ! -f "$f_default_conf" ]; then
	echo "---  Global olint config"
        cp "$REPO_DIR"/default_config "$f_default_conf"

        echo "A default config has been copied to: $f_default_conf"
        echo "You should inspect it to ensure it matches your preferences."
        echo "As long as it is present, it will not be overwritten."
	echo
        files_changed=true
    fi
}

deploy_default_ignore() {
    cfg_file="$HOME"/.olint.conf
    if [ ! -f "$cfg_file" ]; then
        echo "---  Default ignore"
        echo "Deploying a default 'ignore_project=yes' to home-dir"
        echo "ignore_project=yes" >"$cfg_file"
        echo
        files_changed=true
    fi
}

deploy_plugins() {
    echo "---  Linter plugins"

    cmd_conf_dir="$REPO_DIR/olint --config-dir"
    d_default_conf="$($cmd_conf_dir)" || {
        echo "ERROR: Failed to detect config folder using: $cmd_conf_dir"
        exit 1
    }

    d_plugins="$d_default_conf"/plugins
    mkdir -p "$d_plugins"
    if [ -n "$(ls -A "$d_plugins")" ] && ! $force_deploy; then
        echo "Plugin folder has content, will not be overwritten"
        echo "  $d_plugins"
	echo
        return
    fi

    if cmd_output="$(
        rsync -ahP --exclude="*/" --exclude="*~" --exclude="*#" "$REPO_DIR"/plugins/* \
            "$d_plugins" 2>&1
    )"; then
        echo "Default plugins installed to: $d_plugins"
        files_changed=true
    else
        echo "ERROR: copying plugins failed"
        echo
        echo "$cmd_output"
        exit 1
    fi
    echo
}

deploy_app() {
    app="$1"

    if rsync -ahP "$REPO_DIR/$app" "$d_app_dest" | grep -q "$app"; then
	echo "---  Install: $app"
	echo "Latest version installed: $d_app_dest/$app"
	echo
        files_changed=true
    # elif $force_deploy; then
    #     echo "---  Install: $app"
    #     echo "Was current: $d_app_dest/$app"
    fi
}

#===============================================================
#
#   Main
#
#===============================================================

REPO_DIR="$(dirname -- "$0")"

force_deploy=false

check_dependencies
get_app_destination

if [ "$1" = force ]; then
    force_deploy=true
elif [ "$1" = uninstall ]; then
    echo
    echo "-----   Uninstall olint   -----"
    rm -f "$d_app_dest"/olint
    rm -f "$d_app_dest"/bashate-wrapper
    rm -rf "$HOME"/.config/olint
    rm -f "$HOME"/.olint.conf
    echo "Uninstall completed"
    exit 0
elif [ -n "$1" ]; then
    echo "$0 [force / uninstall]"
    echo
    echo "ERROR: invalid option: $1"
    exit 1
fi

files_changed=false

deploy_default_config
deploy_default_ignore
deploy_plugins

# Without any plugins the app can't do anything, so to avoid a useless state
# in case deploy was aborted only install the bins after plugins are available
deploy_app olint
deploy_app bashate-wrapper

if [ "$files_changed" = true ]; then
    exit 2 # indicate files changed
else
    exit 0 # no changes
fi
